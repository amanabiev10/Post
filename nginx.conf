events {}

http {
    server {
        listen 80;
        server_name www.zeniton.de;

        # Weiterleitung von HTTP zu HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
            server_name www.zeniton.de;

            # SSL-Zertifikate
            ssl_certificate /etc/nginx/ssl/www.zeniton.de.crt;
            ssl_certificate_key /etc/nginx/ssl/www.zeniton.de.key;
            ssl_dhparam /etc/nginx/ssl/dhparam.pem;

            # SSL-Protokolle und Cipher
            ssl_protocols TLSv1.2 TLSv1.3;
            ssl_ciphers 'ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:!aNULL:!eNULL:!MD5:!RC4';
            ssl_prefer_server_ciphers on;

        # Frontend-Proxy für Vite
        location / {
            proxy_pass http://frontend:5173/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Backend-Proxy für Django
        location /api/ {
            proxy_pass http://backend:8000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Optional: Fehlerbehandlung
        error_page 404 /404.html;
        location = /404.html {
            root /usr/share/nginx/html;
            internal;
        }
    }
}
